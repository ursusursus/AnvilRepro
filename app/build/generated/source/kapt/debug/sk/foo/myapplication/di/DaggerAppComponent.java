// Generated by Dagger (https://dagger.dev).
package sk.foo.myapplication.di;

import android.content.Context;
import dagger.internal.DoubleCheck;
import dagger.internal.InstanceFactory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import sk.foo.base.Bar;
import sk.foo.base.Foo;
import sk.foo.base.di.BaseModule_BarFactory;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DaggerAppComponent implements AppComponent {
  private Provider<Context> contextProvider;

  private Provider<Foo> fooProvider;

  private DaggerAppComponent(Context contextParam) {

    initialize(contextParam);
  }

  public static AppComponent.Factory factory() {
    return new Factory();
  }

  @SuppressWarnings("unchecked")
  private void initialize(final Context contextParam) {
    this.contextProvider = InstanceFactory.create(contextParam);
    this.fooProvider = DoubleCheck.provider(AppModule_FooFactory.create(contextProvider));
  }

  @Override
  public Bar getBar() {
    return BaseModule_BarFactory.bar(fooProvider.get());}

  private static final class Factory implements AppComponent.Factory {
    @Override
    public AppComponent create(Context context) {
      Preconditions.checkNotNull(context);
      return new DaggerAppComponent(context);
    }
  }
}
